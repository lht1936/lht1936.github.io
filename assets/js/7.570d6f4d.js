(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{157:function(e,c,o){"use strict";o.r(c);var t=o(0),r=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,c=e.$createElement,o=e._self._c||c;return o("div",{staticClass:"content"},[o("h2",{attrs:{id:"title-在mac-osx上安装docker并启动oracle-image-date-2016-09-10-18-40-16tags-docker-oraclecategories-docker"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#title-在mac-osx上安装docker并启动oracle-image-date-2016-09-10-18-40-16tags-docker-oraclecategories-docker","aria-hidden":"true"}},[e._v("#")]),e._v(' title: "在Mac OSX上安装docker并启动Oracle image"\ndate: 2016-09-10 18:40:16\ntags: Docker, Oracle\ncategories: Docker')]),o("p",[e._v("##安装Docker\nDocker提供了在Mac，Linux，Windows上的安装包，直接下载安装即可，安装的时候都是图形化的方式，无需赘述。\nMac Docker: https://download.docker.com/mac/stable/Docker.dmg")]),o("p",[e._v("##对Docker的理解\n刚开始使用，建立一个对Docker实现机制的初步理解，对接下来的操作与学习有所帮助。")]),o("ol",[o("li",[e._v("Docker本地程序在宿主机上启动一组进程，提供一个虚拟化的环境。Mac版本的Docker本地程序使用的虚拟化技术是hypervisor。")]),o("li",[e._v("提供docker，docker-compose客户端工具，对这个虚拟化基础镜像进行管理，目前基础镜像Dokcer官方使用的是Apline Linux，一个面想社区的Linux分支。")]),o("li",[e._v("在虚拟化Linux基础上，启动了Docker Engine，这个engine厉害了，可以管理很多容器，容器里运行各种各样的Image。")]),o("li",[e._v("所以，在不同的宿主机上，Docker需要提供3种本地程序，对本地环境进行虚拟化，当虚拟化完成以后，都是运行一样的基础镜像。")]),o("li",[e._v("Docker Engine管理的各个Container更不用说了，统一的一套代码程序和机制，让各个开发环境无缝在多种宿主机运行，虚拟化可移植化，开发测试生产可以无缝对接。")])]),o("p",[e._v("以上分析不一定对，因为刚开始学，只是自己的理解，后面会持续研究学习，纠正错误的地方。")]),o("p",[e._v("##Docker国内Registry\nDaoCloud: http://www.daocloud.io/\n因为GFW的原因，下载image会很慢，甚至无法完成下载，所以应该使用国内的镜像，daocloud提供对官方的镜像服务，还有自己的镜像:\n"),o("img",{attrs:{src:"http://7xpph3.com1.z0.glb.clouddn.com/daocloud-services.png",alt:""}})]),o("p",[e._v("将镜像地址添加Docker中\n"),o("img",{attrs:{src:"http://7xpph3.com1.z0.glb.clouddn.com/docker-agent-http-address",alt:""}})]),o("p",[e._v("使用国内镜像后，下载速度确实变快了，为了确实使用了镜像，首先查看下载进程的id：\n"),o("img",{attrs:{src:"http://7xpph3.com1.z0.glb.clouddn.com/show-docker-process",alt:""}})]),o("p",[e._v("很明显，进程id为26323名为com.docker.slirp的进程正在下载。")]),o("p",[e._v("查看进程网络通信的目标ip地址：\n"),o("img",{attrs:{src:"http://7xpph3.com1.z0.glb.clouddn.com/show-docker-foreign-address",alt:""}})]),o("p",[e._v("在ip.cn上一查就知道在国内咯:\n"),o("img",{attrs:{src:"http://7xpph3.com1.z0.glb.clouddn.com/show-ip-home",alt:""}})]),o("p",[e._v("##安装Oracle 11g Express Edition\n执行docker pull nameless/oracle-xe-11g 下载oracle\n"),o("img",{attrs:{src:"http://7xpph3.com1.z0.glb.clouddn.com/docker-oracle-downloaded",alt:""}})]),o("p",[e._v("20分钟左右下载完毕")]),o("p",[e._v("##测试Oracle\n考虑到Oracle可能需要较多内存，我把Docker最大内存加到4G了，谁叫Macbook Pro内存杠杠的呢～\n启动oracle image")]),o("div",{staticClass:"language-sh extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("docker run -d -p 49160:22 -p 49161:1521 wnameless/oracle-xe-11g\n")])])]),o("p",[e._v("启动成功：\n"),o("img",{attrs:{src:"http://7xpph3.com1.z0.glb.clouddn.com/run-docker-ubuntu-oracle-11g-xe",alt:""}})]),o("p",[e._v("再次查看内存，发现hyperkit的内存已经占用到2.67G了，这就是启动的容器，里面运行着刚刚下载的image，包括Ubuntu操作系统和Oracle数据库服务：\n"),o("img",{attrs:{src:"http://7xpph3.com1.z0.glb.clouddn.com/ubuntu-oracle-memory-use",alt:""}})]),o("p",[e._v("SSH连接Ubuntu系统，用户名root，密码admin：\n"),o("img",{attrs:{src:"http://7xpph3.com1.z0.glb.clouddn.com/connect-docker-ubuntu",alt:""}})]),o("p",[e._v("进入Ubuntu后，连接Oracle测试，用户名sys或者system，密码都是oracle")]),o("div",{staticClass:"language-sh extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("hostname: localhost  \nport: 49161  \nsid: xe  \nusername: sys/system  \npassword: oracle \n\nXE =\n  (DESCRIPTION =\n    (ADDRESS = (PROTOCOL = TCP)(HOST = f80c1ac48360)(PORT = 1521))\n    (CONNECT_DATA =\n      (SERVER = DEDICATED)\n      (SERVICE_NAME = XE)\n    )\n  )\n")])])]),o("p",[e._v("有了上面的连接串，就可以用自己最熟悉的 pl/sql developer 来连接啦。")])])}],!1,null,null,null);c.default=r.exports}}]);